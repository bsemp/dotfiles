---
- name: Select macos package
  when: ansible_system == "Darwin"
  set_fact:
    k8s_packages: "{{ k8s_brew_packages }}"

- name: Select linux package
  when: ansible_system == "Linux"
  set_fact:
    k8s_packages: "{{ k8s_linux_packages }}"

- name: Install k8s tools
  package:
    name: "{{ item }}"
    state: latest
  loop: "{{ k8s_packages }}"

- name: Install k8s tools on linux (no package manager)
  when:
    - ansible_system == "Linux"
  import_tasks: ./linux_install.yml

- name: Install kubectl plugin manager
  when:
    - k8s_kubectl_krew_enabled | bool
  import_tasks: ./krew_install.yml

- name: Manage configuration file
  when: k8s_config_file != ""
  block:
    - name: Check config files exists
      stat:
        path: "{{ k8s_config_file }}"
      register: file_details

    - name: Ensure config files exists
      when: not file_details.stat.exists
      file:
        path: "{{ k8s_config_file }}"
        state: touch
        mode: 0600

    - name: Create config file
      blockinfile:
        marker: "# {mark} - K8S - ANSIBLE MANAGED BLOCK"
        insertafter: EOF
        path: "{{ k8s_config_file }}"
        block: |
          # Aliases
          alias k="kubectl"
          alias kx="kubectx"
          alias kn="kubens"

          {% if k8s_kubectl_krew_enabled|bool -%}
          # kubectl plugin manager
          export KREW_ROOT="{{ k8s_krew_config_dir }}"
          export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
          {% endif %}

          # Completion for kubectl
          if [[ "${SHELL}" =~ 'zsh' ]]; then
            source <(kubectl completion zsh)
          elif [[ "${SHELL}" =~ 'bash' ]]; then
            source <(kubectl completion bash)
          fi
          # Add completion for the 'k' alias
          complete -F __start_kubectl k

          # Completion for stern
          if [[ -x "$(command -v stern)" ]]; then
            if [[ "${SHELL}" =~ 'zsh' ]]; then
              source <(stern --completion=zsh)
            elif [[ "${SHELL}" =~ 'bash' ]]; then
              source <(stern --completion=bash)
            fi
          fi
